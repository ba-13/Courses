$date
	Thu Mar  2 15:23:03 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder_tb $end
$var wire 1 ! flag $end
$var reg 1 " clk $end
$var reg 1 # reset $end
$scope module a $end
$var wire 1 " clk $end
$var wire 1 # reset $end
$var wire 1 $ done $end
$var wire 32 % dataout [31:0] $end
$var wire 1 & corrupt $end
$var wire 32 ' answer [31:0] $end
$var reg 32 ( A [31:0] $end
$var reg 32 ) B [31:0] $end
$var reg 4 * NS [3:0] $end
$var reg 4 + PS [3:0] $end
$var reg 5 , addr [4:0] $end
$var reg 4 - counter [3:0] $end
$var reg 32 . datain [31:0] $end
$var reg 1 ! flag $end
$var reg 1 / mode $end
$var reg 1 0 rst_ $end
$var reg 1 1 write_enable $end
$scope module add $end
$var wire 32 2 a [31:0] $end
$var wire 32 3 b [31:0] $end
$var wire 1 " clk $end
$var wire 1 0 reset $end
$var reg 32 4 A [31:0] $end
$var reg 32 5 B [31:0] $end
$var reg 32 6 C [31:0] $end
$var reg 1 & corrupt $end
$var reg 1 $ done $end
$var reg 4 7 mode [3:0] $end
$var reg 4 8 next_mode [3:0] $end
$var reg 26 9 signed_a [25:0] $end
$var reg 26 : signed_b [25:0] $end
$var reg 26 ; signed_c [25:0] $end
$upscope $end
$scope module storage $end
$var wire 5 < addr [4:0] $end
$var wire 1 " clk $end
$var wire 32 = datain [31:0] $end
$var wire 32 > dataout [31:0] $end
$var wire 1 / mode $end
$var wire 1 # rst $end
$var wire 1 1 write_enable $end
$var reg 32 ? out [31:0] $end
$var integer 32 @ i [31:0] $end
$scope begin interpret $end
$upscope $end
$scope begin reset $end
$upscope $end
$scope begin scribble $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 @
b0 ?
b0 >
b1000011001010100100000000000000 =
b1 <
bx ;
bx :
bx 9
b1 8
b0 7
bx 6
bx 5
bx 4
bx 3
bx 2
11
10
0/
b1000011001010100100000000000000 .
b1 -
b1 ,
b0 +
b0 *
bx )
bx (
bx '
1&
b0 %
0$
1#
0"
x!
$end
#5
b1 8
b0 -
b100000 @
1"
#10
b1 7
b10 8
00
0"
0#
#15
b1xxxxxxxxxxxxxxxxxxxxxxx :
b1xxxxxxxxxxxxxxxxxxxxxxx 9
b11 8
b10 7
b1000011001010100100000000000000 %
b1000011001010100100000000000000 >
b1000011001010100100000000000000 ?
b1 -
1"
#20
b11 8
0"
#25
b100 8
b11 7
b10 -
1"
#30
b100 8
0"
#35
b101 8
b100 7
b11 -
1"
#40
b101 8
0"
#45
b110 8
b101 7
b1 *
b0 -
1"
#50
b110 8
0"
#55
b11000011011001011010000000000000 .
b11000011011001011010000000000000 =
b10 ,
b10 <
b111 8
b110 7
b1 +
b10 -
b1 *
1"
#60
b111 8
0"
#65
b1000 8
b111 7
b11000011011001011010000000000000 %
b11000011011001011010000000000000 >
b11000011011001011010000000000000 ?
b11 -
b1 *
1"
#70
b1000 8
0"
#75
b1001 8
b1000 7
b0 -
b110 *
1"
#80
b1001 8
0"
#85
1$
01
b1010 8
b1001 7
b110 +
b1 -
b10 *
1"
#90
b1010 8
0"
#95
b10 -
b11000011011001011010000000000000 (
b11000011011001011010000000000000 2
b1 ,
b1 <
b1010 8
b1010 7
b10 +
b10 *
1"
#100
b1010 8
0"
#105
b1010 8
b1000011001010100100000000000000 %
b1000011001010100100000000000000 >
b1000011001010100100000000000000 ?
b11 -
b10 *
1"
#110
b1010 8
0"
#115
b1010 8
b0 -
b1000011001010100100000000000000 (
b1000011001010100100000000000000 2
b11 *
1"
#120
b1010 8
0"
#125
b1000011001010100100000000000000 )
b1000011001010100100000000000000 3
b10 ,
b10 <
b1010 8
b11 +
b10 -
b11 *
1"
#130
b1010 8
0"
#135
b1010 8
b11000011011001011010000000000000 %
b11000011011001011010000000000000 >
b11000011011001011010000000000000 ?
b11 -
b11 *
1"
#140
b1010 8
0"
#145
b1010 8
b0 -
b11000011011001011010000000000000 )
b11000011011001011010000000000000 3
b100 *
1"
#150
b1010 8
0"
#155
b11000011011001011010000000000000 5
b1000011001010100100000000000000 4
0$
b0 7
bx .
bx =
11
10
b11 ,
b11 <
b1 8
b100 +
b10 -
b100 *
1"
#160
b1 8
0"
#165
b1 7
b10 8
bx %
bx >
bx ?
00
b100 *
1"
#170
b10 8
0"
#175
b111001011010000000000000 :
b101010100100000000000000 9
b11 8
b10 7
00
b100 *
1"
#180
b11 8
0"
#185
b100 8
b11 7
00
b100 *
1"
#190
b100 8
0"
#195
b11000110100110000000000000 :
b101 8
b100 7
00
b100 *
1"
#200
b111001011010000000000000 :
b101 8
0"
#205
b11110001001010000000000000 ;
b11000110100110000000000000 :
b110 8
b101 7
00
b100 *
1"
#210
b110 8
0"
#215
b110000110xxxxxxxxxxxxxxxxxxxxxxx '
b110000110xxxxxxxxxxxxxxxxxxxxxxx 6
b111 8
b110 7
00
b100 *
1"
#220
b111 8
0"
#225
b10001110110110000000000000 ;
b1000 8
b111 7
00
b100 *
1"
#230
b11110001001010000000000000 ;
b1000 8
0"
#235
b110000101xxxxxxxxxxxxxxxxxxxxxxx '
b110000101xxxxxxxxxxxxxxxxxxxxxxx 6
b10011101101100000000000000 ;
b1000 8
b1000 7
00
b100 *
1"
#240
b110000100xxxxxxxxxxxxxxxxxxxxxxx '
b110000100xxxxxxxxxxxxxxxxxxxxxxx 6
b10111011011000000000000000 ;
b1000 8
0"
#245
1$
b1001 7
b11000010011011011000000000000000 '
b11000010011011011000000000000000 6
b1010 8
00
b100 *
1"
#250
b1010 8
0"
#255
b1010 8
b1010 7
b11 -
b11000010011011011000000000000000 .
b11000010011011011000000000000000 =
00
b100 *
1"
#260
b1010 8
0"
#265
b1010 8
b11000010011011011000000000000000 %
b11000010011011011000000000000000 >
b11000010011011011000000000000000 ?
b0 -
00
b101 *
1"
#270
b1010 8
0"
#275
1!
b1010 8
b101 +
b1 -
00
b101 *
1"
#280
b1010 8
0"
#285
b1010 8
b101 *
1"
#290
b1010 8
0"
#295
b1010 8
b101 *
1"
#300
b1010 8
0"
#305
b1010 8
b101 *
1"
#310
b1010 8
0"
#315
b1010 8
b101 *
1"
#320
b1010 8
0"
#325
b1010 8
b101 *
1"
#330
b1010 8
0"
#335
b1010 8
b101 *
1"
#340
b1010 8
0"
#345
b1010 8
b101 *
1"
#350
b1010 8
0"
#355
b1010 8
b101 *
1"
#360
b1010 8
0"
#365
b1010 8
b101 *
1"
#370
b1010 8
0"
#375
b1010 8
b101 *
1"
#380
b1010 8
0"
#385
b1010 8
b101 *
1"
#390
b1010 8
0"
#395
b1010 8
b101 *
1"
#400
b1010 8
0"
#405
b1010 8
b101 *
1"
#410
b1010 8
0"
#415
b1010 8
b101 *
1"
#420
b1010 8
0"
#425
b1010 8
b101 *
1"
#430
b1010 8
0"
#435
b1010 8
b101 *
1"
#440
b1010 8
0"
#445
b1010 8
b101 *
1"
#450
b1010 8
0"
#455
b1010 8
b101 *
1"
#460
b1010 8
0"
#465
b1010 8
b101 *
1"
#470
b1010 8
0"
#475
b1010 8
b101 *
1"
#480
b1010 8
0"
#485
b1010 8
b101 *
1"
#490
b1010 8
0"
#495
b1010 8
b101 *
1"
#500
b1010 8
0"
#505
b1010 8
b101 *
1"
#510
b1010 8
0"
